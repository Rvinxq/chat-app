rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isValidEmail() {
      return request.auth.token.email.matches('.*@(gmail\\.com|outlook\\.com|hotmail\\.com)$');
    }
    
    function isUsernameUnique(username) {
      return !exists(/databases/$(database)/documents/usernames/$(username));
    }

    function isEmailVerified() {
      return request.auth.token.email_verified;
    }

    // Public chat messages
    match /public-chat/{messageId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if false;
      allow delete: if isAuthenticated() && 
                   request.auth.uid == resource.data.senderId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() && isValidEmail();
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false;
    }

    // Usernames collection for uniqueness check
    match /usernames/{username} {
      allow read: if true;
      allow create, delete: if isAuthenticated() 
                           && request.auth.uid == request.resource.data.uid;
    }

    // Allow read access to all collections for debugging
    match /{document=**} {
      allow read: if true;
    }
  }
} 